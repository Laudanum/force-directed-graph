// Variables
$node-size-pinned: $node-width * 1.1;

@mixin debug($colour) {
  outline: 1px dashed $colour;
}

%highlighted {
  image {
    opacity: 0.9;
    width: $node-size-pinned;
    height: $node-size-pinned;
    x: -$node-size-pinned / 2;
    y: -$node-size-pinned / 2;
  }

  .label,
  foreignObject body.label {
    display: block;
    opacity: 0.6;
  }
}

* {
  box-sizing: border-box;
}

body.top {
  margin: 0;
}

svg {
  width: 100%;
  height: 100vh;
  position: relative;
  transition: filter $transition-duration;

  .night-mode & {
    filter: invert(1);
  }

  circle {
    fill: #00f;
  }

  .node-centre circle {
    fill: #0f0;
  }

  .node-pinned circle {
    fill: #f00;
  }

  .node {
    width: 10px;
    height: 10px;
    display: block;
    position: absolute;
  }

  .edges line {
    stroke: rgba($line-colour, $line-opacity);
  }

  foreignObject {
    &.label-container {
      z-index: 10;
      pointer-events: none;
      position: absolute;
      width: $label-max-width;
      height: $label-max-width * 2;
    }

    body.label {
      font-size: 12px;
      line-height: 1.1em;
      pointer-events: auto;
      position: absolute;
      opacity: 0;
      display: none;
      background-color: $label-background-colour;
      border: $label-border-weight solid $label-border-colour;
      padding: 5px;
      transition: opacity .25s ease-in-out;
      white-space: pre-line;
      min-width: $label-min-width;

      p {
        margin: 0.6em 0 0 0;
      }
    }
  }

  .node {
    width: $node-width;
    height: $node-height;

    image {
      transition: all .25s ease;
      transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);
      width: $node-width;
      height: $node-height;
      x: -$node-width / 2;
      y: -$node-height / 2;
      opacity: 0.6;
      position: absolute;
    }

    &.node-pinned {
      @extend %highlighted;
    }

    // Touchscreens show centre others use hover
    &.node-centre {
      .touch & {
        @extend %highlighted;
      }
    }

    // Node hover
    &:hover {
      .not-touch & {
        @extend %highlighted;

        .label,
        foreignObject body.label {
          &:hover {
            opacity: 0.9;
          }
        }
      }
    }
  }

  // foreignObject body
  body {
    margin: 0;
    padding: 0;
  }
}

.debug svg {
  @include debug(red);

  .node {
    @include debug(orange);

    image {
      @include debug(green);
    }

    foreignObject {
      @include debug(purple);

      .label-container {
        @include debug(violet);

        .label {
          @include debug(pink);
        }
      }
    }
  }
}
